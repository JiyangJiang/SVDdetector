
function [wmhprob_dat,wmhmask_dat] = wmh_ud2_postproc_classification (ud2param,flair,t1,i)

wmh_ud2_postproc_classification_startTime = tic;

fprintf ('%s :\n', mfilename);
fprintf ('%s : Started (%s).\n', mfilename, string(datetime));

if ud2param.exe.verbose
	fprintf ('%s : Start WMH vs. non-WMH classification for %s.\n', mfilename, ud2param.lists.subjs{i,1});
end


% 1st-level clusters
% ++++++++++++++++++
if ud2param.exe.verbose
	fprintf ('%s : Calling wmh_ud2_postproc_classification_1stLvClstrs for 1st-level clustering.\n', mfilename);
	fprintf ('%s : ''%s'' will be used for 1st-level clustering.\n', mfilename, ud2param.ud.classification.lv1clstr_method);
end

[lv1clstrs_dat,ud2param] = wmh_ud2_postproc_classification_1stLvClstrs (ud2param, ...
																			 flair, ...
																			 fullfile (ud2param.dirs.subjs, ...
																			 		   ud2param.lists.subjs{i,1}, ...
																			 		   'ud', ...
																			 		   'postproc', ...
																			 		   'lv1clstrs.nii'), ...
																			 i);

if ud2param.exe.verbose
	fprintf ('%s : 1st-level clustering using ''%s'' completed.\n', mfilename, ud2param.ud.classification.lv1clstr_method);
end

% % 2nd-level clusters
% % ++++++++++++++++++
% if ud2param.exe.verbose
% 	fprintf ('%s : Calling wmh_ud2_postproc_classification_2ndLvClstrs for 2nd-level clustering.\n', mfilename);
% end

% lv2clstrs_struct = wmh_ud2_postproc_classification_2ndLvClstrs (ud2param, ...
% 																    lv1clstrs_dat, ...
% 																    spm_vol(flair), ...
% 																    fullfile (ud2param.dirs.subjs, ...
% 																    		  ud2param.lists.subjs{i,1}, ...
% 																    		  'ud', ...
% 																    		  'postproc', ...
% 																    		  'lv2clstrs.nii'), ...
% 																    i);
% % extract features
% % ++++++++++++++++
% f_tbl = wmh_ud2_postproc_classification_extFeatures (ud2param, ...
% 														 flair, ...
% 														 t1, ...
% 														 lv2clstrs_struct, ...
% 														 i);

% % predict
% % +++++++++++++++
% mdl = loadLearnerForCoder(fullfile (ud2param.dirs.cns2, ...
% 									'wmh', ...
% 									'wmh_ud2_postproc_classification_knnMdl.mat'));
% [wmhprob_dat, wmhmask_dat] = wmh_ud2_postproc_classification_predict   (ud2param,...
% 																			lv2clstrs_struct,...
% 																			f_tbl,...
% 																			mdl,...
% 																			spm_vol(flair),...
% 																			i);


